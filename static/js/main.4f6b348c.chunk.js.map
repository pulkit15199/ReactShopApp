{"version":3,"sources":["components/Login.js","components/Nav.js","components/Header.js","utiles/config.js","components/Product.js","components/Products.js","container/Shop.js","App.js","serviceWorker.js","index.js","utiles/firebase-config.js"],"names":["Login","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","msg","inherits","createClass","key","value","_this2","userid","refs","uid","pwd","firebase","ref","on","snapshot","val","setState","updateLoginStatus","_this3","userObject","set","then","data","catch","err","react_default","a","createElement","className","htmlFor","type","placeholder","onClick","dologin","bind","clear","add","React","Component","Nav","classNameName","href","src","width","height","alt","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","activeClassName","to","Header","URLS","Product","style","items","url","name","price","Prodcuts","map","itemObjects","Product_Product","Shop","fetch","response","json","console","log","error","doAjax","Header_Header","Nav_Nav","Products_Prodcuts","App","isLogin","loginState","arguments","length","undefined","Shop_Shop","Login_Login","isAuth","Boolean","window","location","hostname","match","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4f6b348c.chunk.js","sourcesContent":["import React from 'react';\nimport * as firebase from 'firebase';\n\nexport class Login extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state = {msg:''};\n    }   \n dologin(){\n    var userid = this.refs.uid.value;\n    var pwd = this.refs.pwd.value;\n    var user  = firebase.database().ref(\"users/\"+userid);\n    user.on('value',(snapshot)=>{\n       var userObject =  snapshot.val();\n       if(userObject.pwd==pwd){\n        this.setState({msg:'Welcome '+userid});\n        this.props.updateLoginStatus(true,userid);\n       }\n       else{\n        this.setState({msg:'Invalid Userid or Password'});\n        this.props.updateLoginStatus(false);\n       }\n    })\n\n\n\n    //  if(userid==pwd){\n        //  this.setState({msg:'Welcome '+userid});\n        //  this.props.updateLoginStatus(true,userid);\n\n    //  }\n    //  else{\n        //  this.setState({msg:'Invalid Userid or Password'});\n        //  this.props.updateLoginStatus(false);\n    //  }\n }\n\n clear(){\n    this.refs.uid.value = \"\";\n    this.refs.pwd.value = \"\";\n\n  }\n\n  add(){\n      var userid = this.refs.uid.value;\n      var pwd = this.refs.pwd.value;\n      var userObject = {\"userid\":userid,\"pwd\":pwd};\n\n      var promise = firebase.database().ref(\"users/\"+userid).set(userObject);\n      promise.then(data => {\n        this.setState({msg:'User Added....'});\n      }).catch(err =>{\n          this.setState({msg:'Error in User Added....'});\n      })\n  }\n    render(){\n\n     return(\n         <div>\n\n             <h2 className = \"alert-info\">Login Page</h2>\n             <div className = \"form-group\">\n                <label htmlFor=\"\">Userid</label>\n                <input type = \"text\" placeholder = \"type User Id\" className = \"form-control\" ref = \"uid\"/>\n\n             </div>\n             <div className = \"form-group\">\n                 <label htmlFor=\"\">Password</label>\n                 <input type = \"password\" placeholder = \"type Password\" className = \"form-control\" ref = \"pwd\" />\n             </div>\n             <div className = \"form-group\">\n                 <button onClick = {this.dologin.bind(this)} className = \"btn btn-primary\">Login</button>\n                 &nbsp;\n                 <button onClick = {this.clear.bind(this)} className = \"btn btn-danger\">Clear</button>\n                 &nbsp;\n                 <button onClick = {this.add.bind(this)} className = \"btn btn-success\">Register</button>\n             </div>\n             <h3 className = \"alert-success\">{this.state.msg}</h3>\n         </div>\n     )\n }\n\n    \n}","import React from 'react';\nexport const Nav = ()=>{\n    return(\n\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n<a classNameName=\"navbar-brand\" href=\"#\">\n    <img src=\"https://www.svgimages.com/svg-image/s7/amazon-logo-256x256.png\" width=\"30\" height=\"30\" classNameName=\"d-inline-block align-top\" alt=\"\"/>\n    Shopping\n  </a>\n  <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span className=\"navbar-toggler-icon\"></span>\n  </button>\n\n  <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n    <ul className=\"navbar-nav mr-auto\">\n      <li className=\"nav-item active\">\n      <a className=\"nav-link\" activeClassName=\"active\" to=\"/\">Items <span className=\"sr-only\">(current)</span></a>\n      </li>\n      <li className=\"nav-item\">\n        <a className=\"nav-link\" to=\"/about\">AboutUs</a>\n      </li>\n      </ul>\n        </div>\n</nav>\n    )\n}","import React from 'react';\nexport const Header = ()=>{\n    return(\n\n        <h1 className = \"alert-success\">Online Shop</h1>\n    )\n}","export const URLS = {\n    \"mobile\" : 'https://raw.githubusercontent.com/brainmentorspvtltd/myserverdata/master/mobiles.json'\n}","import React from 'react';\n\nexport const Product = (props) => {\n     \n    const myStyle = {width : '18rem'};\n    return (\n      <div className = \"row\">\n        <div className = \"col-sm-4\">\n        <div className=\"card\" style={myStyle}>\n  <img className=\"card-img-top\" src={props.items.url} alt=\"Card image cap\"></img>\n  <div className=\"card-body\">\n    <h5 className=\"card-title\">{props.items.name}</h5>\n    <p className=\"card-text\">{props.items.price}</p>\n    <a href=\"#\" className=\"btn btn-primary\">Go somewhere</a>\n  </div>\n  </div>\n        </div>\n        <div className = \"col-sm-4\">\n            <h2>Product Details</h2>\n        </div>\n        \n      </div>\n    )\n  }\n\n","import React, { Component } from 'react'\nimport { Product } from './Product';\n\nexport const Prodcuts = (props) =>{\n  \n    return (\n      \n          props.items.map(itemObjects=><Product items = {itemObjects}/>)\n        \n    \n    )\n  }\n\n","import React from 'react';\nimport {Nav} from '../components/Nav';\nimport {Header} from '../components/Header';\nimport {URLS} from '../utiles/config';\nimport {Prodcuts} from '../components/Products';\n\nexport class Shop extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            items : []\n        }\n    }\n\n    doAjax(){\n        fetch(URLS.mobile).then(response=>{\n            response.json().then(data =>  {\n                this.setState({\n                    items : data['mobiles'],\n                    \n                }); \n                console.log(\"Data is \",data['mobiles']);\n            }).catch(error => {\n                this.setState({err:error})\n            })\n        }).catch(error => {\n            this.setState({err:error})\n        })\n    }\n\n    componentDidMount(){\n        this.doAjax();\n    }\n\n    render(){\n        return(\n            <div>\n                <Header/>\n                <Nav/>\n                <h3>Welcome {this.props.userid}</h3>\n                <h3>Data is {this.props.items}</h3>\n                <Prodcuts items = {this.state.items}/>\n            </div>\n            \n        )\n    }\n}","import React from 'react';\nimport {Login} from './components/Login'\n\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\nimport { Shop } from './container/Shop';\nexport default class App extends React.Component{\n  constructor() {\n    super()\n    this.state ={isLogin : false,userid:''};\n\n  }\n  isAuth(loginState,uid = ''){\n    this.setState({isLogin:loginState, userid : uid});\n  }\n\n\n  \n  render(){\n    return (<div className = \"container\">\n      {this.state.isLogin?<Shop userid={this.state.userid}/>:<Login updateLoginStatus={this.isAuth.bind(this)}/>}\n          \n          </div>);\n    }\n  }\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport * as firebase from 'firebase';\nimport {config} from './utiles/firebase-config';\nfirebase.initializeApp(config);\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","\n\n  // Initialize Firebase\n  export const config = {\n    apiKey: \"AIzaSyAjAPszCArpRMDXckYfIj6cS4JhDcC3RCs\",\n    authDomain: \"hmrproject-8952c.firebaseapp.com\",\n    databaseURL: \"https://hmrproject-8952c.firebaseio.com\",\n    projectId: \"hmrproject-8952c\",\n    storageBucket: \"hmrproject-8952c.appspot.com\",\n    messagingSenderId: \"293166035122\"\n  };\n  // firebase.initializeApp(config);\n"],"sourceRoot":""}